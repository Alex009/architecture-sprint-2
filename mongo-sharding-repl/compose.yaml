version: '3'
name: mongo-sharding-repl

services:
  # config servers
  configSrv-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    volumes:
      - config-1-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  configSrv-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    volumes:
      - config-2-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  configSrv-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - config-3-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # shard1 servers
  shard1-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.1.1
    volumes:
      - shard1-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
  shard1-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.1.2
    volumes:
      - shard1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
  shard1-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.1.3
    volumes:
      - shard1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy

  # shard2 servers
  shard2-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.2.1
    volumes:
      - shard2-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
  shard2-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.2.2
    volumes:
      - shard2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
  shard2-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.2.3
    volumes:
      - shard2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy

  # routers servers
  mongos_router-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.3.1
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv-1:27017,configSrv-2:27017,configSrv-3:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27020", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
      shard1-1:
        condition: service_healthy
      shard1-2:
        condition: service_healthy
      shard1-3:
        condition: service_healthy
      shard2-1:
        condition: service_healthy
      shard2-2:
        condition: service_healthy
      shard2-3:
        condition: service_healthy
  mongos_router-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.3.2
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv-1:27017,configSrv-2:27017,configSrv-3:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27020", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
      shard1-1:
        condition: service_healthy
      shard1-2:
        condition: service_healthy
      shard1-3:
        condition: service_healthy
      shard2-1:
        condition: service_healthy
      shard2-2:
        condition: service_healthy
      shard2-3:
        condition: service_healthy
  mongos_router-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: unless-stopped
    networks:
      app-network:
        ipv4_address: 173.17.3.3
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv-1:27017,configSrv-2:27017,configSrv-3:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27020", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      configSrv-1:
        condition: service_healthy
      configSrv-2:
        condition: service_healthy
      configSrv-3:
        condition: service_healthy
      shard1-1:
        condition: service_healthy
      shard1-2:
        condition: service_healthy
      shard1-3:
        condition: service_healthy
      shard2-1:
        condition: service_healthy
      shard2-2:
        condition: service_healthy
      shard2-3:
        condition: service_healthy

  pymongo_api:
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.4.1
    environment:
#      приложение не поддерживает работу с множеством роутеров, но так как схема в диаграмме делалась под 3 роутера - пример оставляю тут
#      MONGODB_URL: "mongodb://mongos_router-1:27020,mongos_router-2:27020,mongos_router-3:27020"
      MONGODB_URL: "mongodb://mongos_router-1:27020"
      MONGODB_DATABASE_NAME: "somedb"
    depends_on:
      mongos_router-1:
        condition: service_healthy
      mongos_router-2:
        condition: service_healthy
      mongos_router-3:
        condition: service_healthy

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-1-data:
  config-2-data:
  config-3-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:
